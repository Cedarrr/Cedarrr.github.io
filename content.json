{"meta":{"title":"Cedar's blog","subtitle":"学习笔记","description":null,"author":"Cedar","url":"https://cedarrr.github.io/Cedarrr.github.io","root":"/Cedarrr.github.io/"},"pages":[{"title":"tags","date":"2020-01-11T17:41:31.000Z","updated":"2020-01-11T17:42:14.163Z","comments":true,"path":"tags/index.html","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"reading list","slug":"reading-list","date":"2020-01-12T20:25:36.000Z","updated":"2020-01-12T21:10:22.193Z","comments":true,"path":"2020/01/12/reading-list/","link":"","permalink":"https://cedarrr.github.io/Cedarrr.github.io/2020/01/12/reading-list/","excerpt":"Next generation genomics: Background Reading list – Useful reference collections A collection from the journal Bioinformatics is at http://www.oxfordjournals.org/our_journals/bioinformatics/nextgenerationsequencing.html Briefings in Bioinformatics has a special issue on 2nd generation sequencing http://bib.oxfordjournals.org/content/11/5.toc Frontiers in Genetics has a special issue on quality assessment and control of high-throughput sequencing data http://journal.frontiersin.org/ResearchTopic/1683 A list of software tools for NGS is at http://seqanswers.com/forums/showthread.php?t=43","text":"Next generation genomics: Background Reading list – Useful reference collections A collection from the journal Bioinformatics is at http://www.oxfordjournals.org/our_journals/bioinformatics/nextgenerationsequencing.html Briefings in Bioinformatics has a special issue on 2nd generation sequencing http://bib.oxfordjournals.org/content/11/5.toc Frontiers in Genetics has a special issue on quality assessment and control of high-throughput sequencing data http://journal.frontiersin.org/ResearchTopic/1683 A list of software tools for NGS is at http://seqanswers.com/forums/showthread.php?t=43 NGS blogs http://ivory.idyll.org/blog/ http://omicsomics.blogspot.co.uk/ http://pathogenomics.bham.ac.uk/blog/ http://www.rna-seqblog.com/ http://core-genomics.blogspot.co.uk/ http://www.homolog.us/blogs/ https://flxlexblog.wordpress.com/","categories":[],"tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/bioinformatics/"},{"name":"reading","slug":"reading","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/reading/"}]},{"title":"生信入门阅读","slug":"生信入门阅读","date":"2020-01-10T21:19:53.000Z","updated":"2020-01-10T21:21:40.495Z","comments":true,"path":"2020/01/10/生信入门阅读/","link":"","permalink":"https://cedarrr.github.io/Cedarrr.github.io/2020/01/10/生信入门阅读/","excerpt":"","text":"2019年，做生信，应该知道的十大经典套路: https://www.jianshu.com/p/84ca0b818574","categories":[],"tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/bioinformatics/"}]},{"title":"GEO数据挖掘","slug":"01 GEO数据挖掘","date":"2020-01-10T20:40:37.000Z","updated":"2020-01-12T12:35:21.023Z","comments":true,"path":"2020/01/10/01 GEO数据挖掘/","link":"","permalink":"https://cedarrr.github.io/Cedarrr.github.io/2020/01/10/01 GEO数据挖掘/","excerpt":"","text":"01 通用文献阅读及规律02 了解GEO数据库03 数据下载的3种方式 – 得到表达矩阵由于R语言版本高于3.5，需要用新的方式安装GEOquery 123456789101112131415161718192021222324252627if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\")BiocManager::install(version = \"3.10\")biocManager::install(\"GEOquery\")# 获得表达矩阵的两种方式# 1. getGEO# eset这里是个对象,里面包括表达矩阵，芯片如何设计，样本如何分组等信息。 从这个列表中提取出表达矩阵，才能进行后续的操作eset&lt;-getGEO(\"GSE42872\", destdir=\".\", #下载在当前目录 getGPL=F, # 平台信息不要 AnnotGPL=F) # 注释不要b1=exprs(eset[[1]]) # 提取表达矩阵# 2. 从网页里直接下载GEO文件，然后处理# a是一个表达矩阵a=read.table(\"GSE42872_series_matrix.txt.gz\", sep=\"\\t\",quote=\"\",fill=T, comment.char=\"!\",header=T) #不要注释信息，把第一行设置为headera[,1] # a的第一列rownames(a)=a[,1] #把a的行名设为第一列的名字a=a[,-1] #去掉原来的第一列，也就是行名的那一列## 这里b1和处理之后的a是完全相同的东西## getGEO和GEOquery就是做了方法2的代码 用GEOquery从GEO数据库下载数据：http://www.bio-info-trainee.com/bioconductor_China/software/GEOquery.html 04 ID转换技巧大全通常会出现多个探针对应同一个基因，取平均值，最大值，中位值等等，其实一个探针也可以对应多个基因，因为基因家族的问题，基因本身ID就是多种多样的，entrz ID和symbol是最重要的。 我们下载的数据通常使用的是不同的芯片探针，它们有不同的探针ID(probe id)，我们需要把它转化成entrez ID或者是symbol ID 12345678910111213141516# 观察eset列表&gt; eset[[1]]ExpressionSet (storageMode: lockedEnvironment)assayData: 33297 features, 6 samples element names: exprs protocolData: nonephenoData sampleNames: GSM1052615 GSM1052616 ... GSM1052620 (6 total) varLabels: title geo_accession ... cell type:ch1 (34 total) varMetadata: labelDescriptionfeatureData: noneexperimentData: use 'experimentData(object)' pubMedIds: 24469106 Annotation: GPL6244 这个的芯片平台是GPL6244, 需要找到对应的R包。可以直接用搜索，GPL6244 r package或是参考里生信树的文章。找到的生信平台是hugene10sttranscriptcluster。 12345678910111213biocManager::install(\"hugene10sttranscriptcluster.db\")library(hugene10sttranscriptcluster.db)ls(\"package:hugene10sttranscriptcluster.db\") #查看包里包含哪些对象ids=toTable(hugene10sttranscriptclusterSYMBOL) #用toTable函数提取数据集里面的信息&gt; head(ids) probe_id symbol1 7896759 LINC011282 7896761 SAMD113 7896779 KLHL174 7896798 PLEKHN15 7896817 ISG156 7896822 AGRN 查看基因的数量，unique：extract unique elements 是用来去除重复的symbol，只提取不同的元素。length函数统计去重之后的基因数量。 12&gt; length(unique(ids$symbol))[1] 18834 查看每个基因对应的探针。table()可以省成频数统计表，这里就是统计每个基因symbol出现的次数并将其表格化；sort()函数将symbol出现的频率从小到大排序；tail()取最后6个即出现频率最大的6个。 1234&gt; tail(sort(table(ids$symbol))) RPL41 UBTFL1 CDK11B UBE2D3 IGKC LRRFIP1 6 6 8 8 10 10 这里table()是把出现频率相同的探针继续归一，继续表格化。这里18072个基因设计了1个探针，599个基因设计了2个探针…这个表达矩阵中大部分的基因只设计了一个探针。一般基因都会设计很多探针，我们下载的表达矩阵是作者处理之后的，把许多不好的探针都过滤掉了，我们处理作者的数据要默认人家做的是对的，否则就要下载原始数据自己处理。 12345# 找到a1里面probe id里是否在ids里面 &gt; table(rownames(a1) %in% ids$probe_id) FALSE TRUE 13483 19814 #有13483个不在，19814个在dim(a1) # 探针数量，这时有33297个探针 x %in% y表示x的元素在y中吗？然后返回逻辑值。rownames(a1)即表达矩阵a1的行名，是文章数据中所用到的探针idprobe id;ids$probe_id是所有具有对应基因的所有探针。所以返回的true就是文章数据中有对应基因的探针数。 123# 过滤a1里，probe id不在R 包中的数据a1=a1[rownames(a1) %in% ids$probe_id,]dim(a1) #此时探针只剩下了19814个 这里就相当于矩阵取子集，如matrix[2,]意思就是取矩阵matrix的第2行和所有的列。同理，这里的就是取具有对应基因的所有探针，和所有的列。 用match函数把ids里的探针顺序改一下。match（）函数返回的是一个位置向量，该向量记录这第一个参数总每个远在在第2个参数中的位置。所以此时ids里的探针顺序与表达矩阵a1的探针顺序意义对应。 123456789101112131415161718# 使探针顺序与表达矩阵顺序相同ids=ids[match(rownames(a1),ids$probe_id),]&gt; head(ids) probe_id symbol1 7896759 LINC011282 7896761 SAMD113 7896779 KLHL174 7896798 PLEKHN15 7896817 ISG156 7896822 AGRN&gt; head(a1) X.GSM1052615. X.GSM1052616. X.GSM1052617. X.GSM1052618. X.GSM1052619. X.GSM1052620.7896759 8.75126 8.61650 8.81149 8.32067 8.41445 8.452087896761 8.39069 8.52617 8.43338 9.17284 9.10216 9.141207896779 8.20228 8.30886 8.18518 8.13322 8.06453 8.158847896798 8.41004 8.37679 8.27521 8.34524 8.35557 8.444097896817 7.72204 7.74572 7.78022 7.72308 7.53797 7.734017896822 9.19237 9.10929 9.03668 9.94821 9.96994 9.99839 顺序相同就可以通过ids的probe id对表达矩阵进行分类，得到探针列表。将同一个symbol所对应的多个探针分成不同的组，并对每组探针进行统计；计算每组中每行探针表达量的平均值（也就是每个探针在6个样本中表达量的均值rowMeans(x)），再取平均值最大的那个探针作为该symbol所对应的唯一探针，该组中的其他探针过滤掉，这样每个symbol就对应一个探针了，看下代码是如何操作的： 12345678910tmp=by(a1, ids$symbol, function(x) rownames(x)[which.max(rowMeans(x))])# 再把探针列表转换成probeprobes=as.character(tmp)dim(a1) #[1] 19814 6# 过滤有多个探针的基因。a1=a1[rownames(a1) %in% probes,]dim(a1) #[1] 18821 6 by()函数在这里发挥的功能就是将表达矩阵a1中的探针分组，同一个symbol所对应的多个探针分到一组，并对每组探针进行统计得到symbol所对应的唯一探针。所以tmp里放着by()函数的统计结果即每个symbol所对应的唯一探针IDprobe_id，用probes=as.character(tmp)将结果变身为纯字符型向量。 by()函数会分组计算描述性统计量，它可以一次返回若干个统计量。格式为by(data, INDICES, FUN)，其中data是一个数据框或矩阵；INDICES是一个因子或因子组成的列表，定义了分组；FUN是任意函数。by()函数就是根据因子将整个data分组成几个小的data.frame，然后进行运算处理。 这里by(a1,ids$symbol,function(x) rownames(x)[which.max(rowMeans(x))])的第2个参数ids$symbol定义了分组，将第一个参数a1表达矩阵分成了若干个小矩阵，每个小矩阵里存放着同一个symbol所对应的所有探针。但三个参数是我们自己定义的参数：计算每个小矩阵中每行探针表达量的平均值（也就是每个探针在6个样本中表达量的均值rowMeans(x)），再取平均值最大的那个探针作为该symbol, 123456&gt; head(tmp)ids$symbol A1CF A2M A2ML1 A3GALT2 A4GALT A4GNT \"7933640\" \"7960947\" \"7953775\" \"7914643\" \"8076497\" \"8090955\" &gt; head(probes)[1] \"7933640\" \"7960947\" \"7953775\" \"7914643\" \"8076497\" \"8090955\" 05 了解你的表达矩阵06 差异分析07 火山图及热图制作及美化08 KEGG-GO等数据库的注释及GSEA分析09 收尾的几点建议Reference R来完成表达芯片分析全流程：http://www.bio-info-trainee.com/2087.html 生信人的20个语言练习题： http://www.bio-info-trainee.com/3409.html 生信人的20个R语言练习题答案：http://www.bio-info-trainee.com/3415.html 生信人的linux考试： http://www.bio-info-trainee.com/2900.html 黄晶_id视频笔记：https://www.jianshu.com/p/8dd7dc1e1719 刘小泽视频笔记： https://www.jianshu.com/p/993b4022363f 用R 获取芯片探针与基因的对应关系三部曲-bioconductor（常见基因注释平台对应的R包）: http://www.bio-info-trainee.com/1399.html","categories":[],"tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/bioinformatics/"},{"name":"流程","slug":"流程","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/流程/"}]},{"title":"markdown基础语法","slug":"markdown基础语法","date":"2019-12-27T20:40:37.000Z","updated":"2020-01-12T12:25:24.030Z","comments":true,"path":"2019/12/27/markdown基础语法/","link":"","permalink":"https://cedarrr.github.io/Cedarrr.github.io/2019/12/27/markdown基础语法/","excerpt":"","text":"123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960Markdown 目录： [TOC] ### 基础语法Markdown 标题： **# 这是 H1** **## 这是 H2** **### 这是 H3** Markdown 列表： - 列表项目 1. 列表项目 *斜体***粗体*****加粗斜体***~~删除线~~#这3个仅适用于扩展过的typora==高亮==上标^1^下标~1~字体背景颜色：&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;字体颜色：&lt;font color=#0099ff&gt;这是#0099ff&lt;/font&gt;Markdown 插入链接：[链接文字](链接网址 \"标题\")Markdown 插入图片：![alt text](/path/to/img.jpg \"Title\")Markdown 引用：&gt; 引用内容------Markdown 换行：&lt;br&gt;Markdown 段首缩进：&amp;ensp; or &amp;#8194; 表示一个半角的空格&amp;emsp; or &amp;#8195; 表示一个全角的空格&amp;emsp;&amp;emsp; 两个全角的空格（用的比较多）&amp;nbsp; or &amp;#160; 不断行的空白格&gt;区段引用### 脚注使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Typora[^T] 编辑器进行书写。 [^1]:Markdown是一种纯文本标记语言 [^2]:HyperText Markup Language 超文本标记语言[^T]:NEW WAY TO READ &amp; WRITE MARKDOWN.### blog相关&lt;!-- more --&gt; 文章截断，在文章内容中加入可以在首页中只显示这之上的内容在文章头信息中添加descripTion字段，并填写内容，就可以在首页显示文章简述而不显示文章内容。 reference: https://blog.csdn.net/witnessai1/article/details/52551362 https://blog.csdn.net/u014061630/article/details/81359144 https://github.com/ahonn/hexo-theme-even/wiki","categories":[],"tags":[{"name":"语法","slug":"语法","permalink":"https://cedarrr.github.io/Cedarrr.github.io/tags/语法/"}]}]}