{"meta":{"title":"Cedar's blog","subtitle":"学习笔记","description":null,"author":"Cedar","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"生信入门阅读","slug":"生信入门阅读","date":"2020-01-10T21:19:53.000Z","updated":"2020-01-10T21:21:40.495Z","comments":true,"path":"2020/01/10/生信入门阅读/","link":"","permalink":"http://yoursite.com/2020/01/10/生信入门阅读/","excerpt":"","text":"2019年，做生信，应该知道的十大经典套路: https://www.jianshu.com/p/84ca0b818574","categories":[],"tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"}]},{"title":"markdown基础语法","slug":"markdown基础语法","date":"2019-12-27T20:40:37.000Z","updated":"2019-12-28T09:47:22.586Z","comments":true,"path":"2019/12/27/markdown基础语法/","link":"","permalink":"http://yoursite.com/2019/12/27/markdown基础语法/","excerpt":"","text":"12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455Markdown 目录： [TOC] ### 基础语法Markdown 标题： **# 这是 H1** **## 这是 H2** **### 这是 H3** Markdown 列表： - 列表项目 1. 列表项目 *斜体***粗体*****加粗斜体***~~删除线~~#这3个仅适用于扩展过的typora==高亮==上标^1^下标~1~字体背景颜色：&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=orange&gt;背景色是：orange&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;字体颜色：&lt;font color=#0099ff&gt;这是#0099ff&lt;/font&gt;Markdown 插入链接：[链接文字](链接网址 \"标题\")Markdown 插入图片：![alt text](/path/to/img.jpg \"Title\")Markdown 引用：&gt; 引用内容------Markdown 换行：&lt;br&gt;Markdown 段首缩进：&amp;ensp; or &amp;#8194; 表示一个半角的空格&amp;emsp; or &amp;#8195; 表示一个全角的空格&amp;emsp;&amp;emsp; 两个全角的空格（用的比较多）&amp;nbsp; or &amp;#160; 不断行的空白格### 脚注使用 Markdown[^1]可以效率的书写文档, 直接转换成 HTML[^2], 你可以使用 Typora[^T] 编辑器进行书写。 [^1]:Markdown是一种纯文本标记语言 [^2]:HyperText Markup Language 超文本标记语言[^T]:NEW WAY TO READ &amp; WRITE MARKDOWN. 12345678910### 流程图st=&gt;start: 开始op1=&gt;operation: My Operationc=&gt;condition: Yes or No?e=&gt;end:st-&gt;op1-&gt;cc(yes)-&gt;ec(no)-&gt;op1 reference: https://blog.csdn.net/witnessai1/article/details/52551362 https://blog.csdn.net/u014061630/article/details/81359144","categories":[],"tags":[{"name":"语法","slug":"语法","permalink":"http://yoursite.com/tags/语法/"}]},{"title":"GEO数据挖掘","slug":"01 GEO数据挖掘","date":"2019-12-27T20:40:37.000Z","updated":"2020-01-11T00:03:28.063Z","comments":true,"path":"2019/12/27/01 GEO数据挖掘/","link":"","permalink":"http://yoursite.com/2019/12/27/01 GEO数据挖掘/","excerpt":"","text":"CONTENT[toc] 01 通用文献阅读及规律02 了解GEO数据库- 03 数据下载的3种方式 – 得到表达矩阵由于R语言版本高于3.5，需要用新的方式安装GEOquery 123456789101112131415161718192021222324252627if (!requireNamespace(\"BiocManager\", quietly = TRUE)) install.packages(\"BiocManager\")BiocManager::install(version = \"3.10\")biocManager::install(\"GEOquery\")# 获得表达矩阵的两种方式# 1. getGEO# eset这里是个对象,里面包括表达矩阵，芯片如何设计，样本如何分组等信息。 从这个列表中提取出表达矩阵，才能进行后续的操作eset&lt;-getGEO(\"GSE42872\", destdir=\".\", #下载在当前目录 getGPL=F, # 平台信息不要 AnnotGPL=F) # 注释不要b1=exprs(eset[[1]]) # 提取表达矩阵# 2. 从网页里直接下载GEO文件，然后处理# a是一个表达矩阵a=read.table(\"GSE42872_series_matrix.txt.gz\", sep=\"\\t\",quote=\"\",fill=T, comment.char=\"!\",header=T) #不要注释信息，把第一行设置为headera[,1] # a的第一列rownames(a)=a[,1] #把a的行名设为第一列的名字a=a[,-1] #去掉原来的第一列，也就是行名的那一列## 这里b1和处理之后的a是完全相同的东西## getGEO和GEOquery就是做了方法2的代码 用GEOquery从GEO数据库下载数据：http://www.bio-info-trainee.com/bioconductor_China/software/GEOquery.html 04 ID转换技巧大全通常会出现多个探针对应同一个基因，取平均值，最大值，中位值等等，其实一个探针也可以对应多个基因，因为基因家族的问题，基因本身ID就是多种多样的，entrz ID和symbol是最重要的。 我们下载的数据通常使用的是不同的芯片探针，它们有不同的探针ID(probe id)，我们需要把它转化成entrez ID或者是symbol ID 12345678910111213141516171819202122232425262728293031323334353637383940414243# 观察eset列表&gt; eset[[1]]ExpressionSet (storageMode: lockedEnvironment)assayData: 33297 features, 6 samples element names: exprs protocolData: nonephenoData sampleNames: GSM1052615 GSM1052616 ... GSM1052620 (6 total) varLabels: title geo_accession ... cell type:ch1 (34 total) varMetadata: labelDescriptionfeatureData: noneexperimentData: use 'experimentData(object)' pubMedIds: 24469106 Annotation: GPL6244 # 这个的芯片平台是GPL6244, 需要找到对应的R包 # 可以直接用搜索，GPL6244 r package或是生信树的文章# 找到的生信平台是hugene10sttranscriptclusterbiocManager::install(\"hugene10sttranscriptcluster.db\")library(hugene10sttranscriptcluster.db)ls(\"package:hugene10sttranscriptcluster.db\") #查看包里包含哪些对象ids=toTable(hugene10sttranscriptclusterSYMBOL)# 找到a1里面probe id里是否在ids里面 &gt; table(rownames(a1) %in% ids$probe_id) FALSE TRUE 13483 19814 #有13483个不在，19814个在dim(a1) # 探针数量，这时有33297个探针# 过滤a1里，probe id不在R 包中的数据a1=a1[rownames(a1) %in% ids$probe_id,]dim(a1) #此时探针只剩下了19814个# 使探针顺序与表达矩阵顺序相同ids=ids[match(rownames(a1),ids$probe_id),]a1[1:4,1:4]# 顺序相同就可以通过ids的symbol对表达矩阵进行分类，得到探针列表tmp=by(a1, ids$symbol, function(x) rownames(x)[which.max(rowMeans(x))])# 再把探针列表转换成probe 05 了解你的表达矩阵06 差异分析07 火山图及热图制作及美化08 KEGG-GO等数据库的注释及GSEA分析09 收尾的几点建议Reference R来完成表达芯片分析全流程：http://www.bio-info-trainee.com/2087.html 生信人的20个语言练习题： http://www.bio-info-trainee.com/3409.html 生信人的20个R语言练习题答案：http://www.bio-info-trainee.com/3415.html 生信人的linux考试： http://www.bio-info-trainee.com/2900.html 黄晶_id视频笔记：https://www.jianshu.com/p/8dd7dc1e1719 刘小泽视频笔记： https://www.jianshu.com/p/993b4022363f 用R 获取芯片探针与基因的对应关系三部曲-bioconductor: http://www.bio-info-trainee.com/1399.html 备注 常见基因注释平台对应的R包gpl organism bioc_package1 GPL32 Mus musculus mgu74a2 GPL33 Mus musculus mgu74b3 GPL34 Mus musculus mgu74c6 GPL74 Homo sapiens hcg1107 GPL75 Mus musculus mu11ksuba8 GPL76 Mus musculus mu11ksubb9 GPL77 Mus musculus mu19ksuba10 GPL78 Mus musculus mu19ksubb11 GPL79 Mus musculus mu19ksubc12 GPL80 Homo sapiens hu680013 GPL81 Mus musculus mgu74av214 GPL82 Mus musculus mgu74bv215 GPL83 Mus musculus mgu74cv216 GPL85 Rattus norvegicus rgu34a17 GPL86 Rattus norvegicus rgu34b18 GPL87 Rattus norvegicus rgu34c19 GPL88 Rattus norvegicus rnu3420 GPL89 Rattus norvegicus rtu3422 GPL91 Homo sapiens hgu95av223 GPL92 Homo sapiens hgu95b24 GPL93 Homo sapiens hgu95c25 GPL94 Homo sapiens hgu95d26 GPL95 Homo sapiens hgu95e27 GPL96 Homo sapiens hgu133a28 GPL97 Homo sapiens hgu133b29 GPL98 Homo sapiens hu35ksuba30 GPL99 Homo sapiens hu35ksubb31 GPL100 Homo sapiens hu35ksubc32 GPL101 Homo sapiens hu35ksubd36 GPL201 Homo sapiens hgfocus37 GPL339 Mus musculus moe430a38 GPL340 Mus musculus mouse430239 GPL341 Rattus norvegicus rae230a40 GPL342 Rattus norvegicus rae230b41 GPL570 Homo sapiens hgu133plus242 GPL571 Homo sapiens hgu133a243 GPL886 Homo sapiens hgug4111a44 GPL887 Homo sapiens hgug4110b45 GPL1261 Mus musculus mouse430a249 GPL1352 Homo sapiens u133x3p50 GPL1355 Rattus norvegicus rat230251 GPL1708 Homo sapiens hgug4112a54 GPL2891 Homo sapiens h20kcod55 GPL2898 Rattus norvegicus adme16cod60 GPL3921 Homo sapiens hthgu133a63 GPL4191 Homo sapiens h10kcod64 GPL5689 Homo sapiens hgug4100a65 GPL6097 Homo sapiens illuminaHumanv166 GPL6102 Homo sapiens illuminaHumanv267 GPL6244 Homo sapiens hugene10sttranscriptcluster68 GPL6947 Homo sapiens illuminaHumanv369 GPL8300 Homo sapiens hgu95av270 GPL8490 Homo sapiens IlluminaHumanMethylation27k71 GPL10558 Homo sapiens illuminaHumanv472 GPL11532 Homo sapiens hugene11sttranscriptcluster73 GPL13497 Homo sapiens HsAgilentDesign02665274 GPL13534 Homo sapiens IlluminaHumanMethylation450k75 GPL13667 Homo sapiens hgu21976 GPL15380 Homo sapiens GGHumanMethCancerPanelv177 GPL15396 Homo sapiens hthgu133b78 GPL17897 Homo sapiens hthgu133a","categories":[],"tags":[{"name":"bioinformatics","slug":"bioinformatics","permalink":"http://yoursite.com/tags/bioinformatics/"},{"name":"流程","slug":"流程","permalink":"http://yoursite.com/tags/流程/"}]}]}